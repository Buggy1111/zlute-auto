rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Games collection
    match /games/{gameId} {
      // Anyone can read games
      allow read: if true;

      // Only allow creation with valid structure
      allow create: if request.resource.data.keys().hasAll(['createdAt', 'updatedAt', 'players'])
                    && request.resource.data.players.size() >= 2
                    && request.resource.data.players.size() <= 6;

      // Only allow updates to players scores and updatedAt
      // Rate limit: at least 1 second between updates
      allow update: if request.resource.data.diff(resource.data).affectedKeys()
                       .hasOnly(['players', 'updatedAt'])
                    && request.resource.data.updatedAt is int
                    && request.time > resource.data.updatedAt + duration.value(1, 's');

      // Prevent deletion of games
      allow delete: if false;

      // Events subcollection
      match /events/{eventId} {
        // Anyone can read events
        allow read: if true;

        // Only allow creating valid events
        allow create: if request.resource.data.keys().hasAll(['playerId', 'playerName', 'timestamp', 'type'])
                      && request.resource.data.type == 'point_added'
                      && request.resource.data.timestamp is int;

        // Prevent updates and deletes of events
        allow update, delete: if false;
      }
    }
  }
}
